<UserControl x:Class="TBT.App.Views.Controls.TimeEntryControl"
             x:Name="this"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TBT.App.Views.Controls"
             xmlns:p="clr-namespace:TBT.App.Properties"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding InitCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Border>
        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=TimeEntry.IsRunning}" Value="true">
                        <Setter Property="BorderBrush" Value="#e8711f"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=TimeEntry.IsRunning}" Value="false">
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
    <Grid MinHeight="75">
        <Grid.Style>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=TimeEntry.IsRunning}" Value="true">
                        <Setter Property="Background" Value="#fff2e0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
            <Grid Margin="5">
                <StackPanel Orientation="Horizontal">
                <Image Source="../../Resources/Icons/Clock.png" Width="65" Height="65" Margin="0 0 10 0" VerticalAlignment="Top"/>

                <StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="startStopButton"
                                Command="{Binding Path=StartStopCommand, Mode=TwoWay}" 
                                IsEnabled="{Binding Path=CanStart}"
                                Margin="0 0 2 0"
                                Height="24"
                                Visibility="{Binding Path=TimeEntry.Date, Converter={StaticResource TodayToVisibilityConverter}}"
                                Width="24">
                            <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Foreground" Value="{StaticResource TimeEntryButtonForeground}"/>
                                    <Setter Property="Background" Value="{StaticResource TimeEntryButtonBackground}"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template" Value="{StaticResource RoundButtonTemplate}"/>
                                    <Style.Triggers>
                                        <Trigger Property ="IsMouseOver" Value ="True">
                                            <Setter Property="Background" Value="{StaticResource TimeEntryButtonBackgroundMouseOverBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value ="False">
                                            <Setter Property="Background" Value="{StaticResource TimeEntryButtonBackgroundDisabled}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding Path=TimeEntry.IsRunning}" Value="true">
                                            <Setter Property="Content" >
                                                <Setter.Value>
                                                    <Image Source="/Resources/Icons/stop.png" Stretch="Fill" Height="12" Width="12" ToolTip="{x:Static p:Resources.Stop}"/>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=TimeEntry.IsRunning}" Value="false">
                                            <Setter Property="Content" >
                                                <Setter.Value>
                                                    <Image Source="/Resources/Icons/play.png" Stretch="Fill" Height="16" Width="16" ToolTip="{x:Static p:Resources.Start}"/>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button x:Name="editButton" 
                                IsEnabled="{Binding Path=CanEdit}"
                                Command="{Binding Path=EditCommand, Mode=TwoWay}" 
                                Margin="2 0"
                                Visibility="{Binding ElementName=this, Path=TimeEntry.Date, Converter={StaticResource EditButtonToVisibilityConverter}}"
                                Height="24"
                                Width="24">
                            <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Foreground" Value="{StaticResource TimeEntryButtonForeground}"/>
                                    <Setter Property="Background" Value="{StaticResource TimeEntryButtonBackground}"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template" Value="{StaticResource RoundButtonTemplate}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value ="True">
                                            <Setter Property="Background" Value="{StaticResource TimeEntryButtonBackgroundMouseOverBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value ="False">
                                            <Setter Property="Background" Value="{StaticResource TimeEntryButtonBackgroundDisabled}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Image Source="/Resources/Icons/editing.png" Stretch="Fill" Height="12" Width="12" ToolTip="{x:Static p:Resources.Edit}"/>
                        </Button>

                        <Button Command="{Binding Path=RemoveCommand, Mode=TwoWay}" 
                            Margin="2 0"
                            Height="24"
                            Width="24">
                            <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Foreground" Value="{StaticResource TimeEntryButtonForeground}"/>
                                    <Setter Property="Background" Value="{StaticResource TimeEntryButtonBackground}"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template" Value="{StaticResource RoundButtonTemplate}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value ="True">
                                            <Setter Property="Background" Value="{StaticResource TimeEntryButtonBackgroundMouseOverBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value ="False">
                                            <Setter Property="Background" Value="{StaticResource TimeEntryButtonBackgroundDisabled}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                                <Image Source="/Resources/Icons/bin.png" Stretch="Fill" Height="12" Width="12" ToolTip="{x:Static p:Resources.Remove}"/>
                        </Button>

                        <TextBlock Text="{Binding Path=TimeEntry, Converter={StaticResource TimeEntryConverter}}" 
                                   Margin="10 0 0 0" FontSize="14" 
                                   VerticalAlignment="Center" />
                    </StackPanel>
                    <TextBlock x:Name="timerTextBlock"
                           Margin="0 0 5 0"
                           FontSize="20" 
                           FontWeight="Bold" 
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Text="{Binding TimerTextBlock}"
                           Visibility="{Binding Path=IsEditing, Converter={StaticResource BoolToNotVisibilityConverter}}"/>
                    <TextBlock Text="{Binding Path=TimeEntry.Comment}" 
                               FontSize="12"  
                               VerticalAlignment="Center" Width="370" TextTrimming="WordEllipsis"
                               Visibility="{Binding Path=IsEditing, Converter={StaticResource BoolToNotVisibilityConverter}}" />

                    <StackPanel Visibility="{Binding Path=IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBox x:Name="timerTextBox" 
                                 VerticalAlignment="Top" HorizontalAlignment="Left"
                                 Margin="0 2 0 2"
                                 Grid.Row="0"
                                 FontSize="17" 
                                 Height="22"
                                 Width="115"
                                 FontWeight="Bold" 
                                 VerticalContentAlignment="Center"
                                 Text="{Binding TimerTextBox}"
                                 PreviewTextInput="CheckInput"/>
                        <TextBox Name="commentArea"
                                 Text="{Binding Path=TimeEntry.Comment, Mode=TwoWay}" 
                                 Width="370" Height="80"
                                 TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto"
                                 HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 2 0 0" >

                            <Button Name="saveButton"
                                    VerticalAlignment="Bottom"
                                    HorizontalAlignment="Left"
                                    Width="Auto"
                                    Command="{Binding SaveTimeEntryCommand}" Margin="0 0 2 0">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid x:Name="thisButtonTemplate" HorizontalAlignment="Stretch" VerticalAlignment="Center">

                                                        <Grid.Style>
                                                            <Style TargetType="Grid">
                                                                    <Style.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Cursor" Value="Hand" />
                                                                        <Setter Property="Background" Value="#005c00"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="False">
                                                                        <Setter Property="Background" Value="{StaticResource TimeEntryNotRunningBackground}"/>
                                                                    </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Grid.Style>

                                                            <TextBlock Text="{x:Static p:Resources.Save}" 
                                                                   Margin="6 4" 
                                                                   Foreground="#ffffff"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center"/>

                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <Button VerticalAlignment="Bottom"
                                    HorizontalAlignment="Right"
                                    Command="{Binding CancelEditTimeEntryCommand}"
                                    Width="Auto">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid x:Name="thisButtonTemplate" HorizontalAlignment="Center" VerticalAlignment="Center">

                                                        <Grid.Style>
                                                            <Style TargetType="Grid">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ElementName=startButton, Path=IsEnabled}" Value="False">
                                                                        <Setter Property="Opacity" Value="0.5"/>
                                                                    </DataTrigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Cursor" Value="Hand" />
                                                                        <Setter Property="Background" Value="#5c002e"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="False">
                                                                        <Setter Property="Background" Value="{StaticResource TimeEntryNotRunningBackground}"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Grid.Style>

                                                            <TextBlock Text="{x:Static p:Resources.Cancel}"
                                                                   Margin="6 4" 
                                                                   Foreground="#ffffff"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center"/>

                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </StackPanel>

                </StackPanel>
            </StackPanel>
        </Grid>
        </Grid>
    </Border>
</UserControl>
